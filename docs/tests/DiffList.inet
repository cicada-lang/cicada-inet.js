defnode sole -- return! end

defnode null -- return! end

defnode cons head tail -- return! end

defnode diff left right -- return! end

defnode diff_append left! right -- return end

defru diff diff_append
  (let start) (let fin) (let diff_list)
  fin diff_list diff_open start diff
end

defnode diff_open diff_list! list -- return end

defru diff diff_open
  (let start) (let fin) (let list)
  list fin connect
  start
end

defnet one_two_soles
  wire sole cons diff
  wire sole cons sole cons diff
  diff_append
end

defnet two_two_soles
  wire sole cons sole cons diff
  wire sole cons sole cons diff
  diff_append
end
