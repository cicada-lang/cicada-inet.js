(define-cons sole 0)

(define-cons null 0)
(define-cons cons 2)

(define-cons diff 2)

(define-elim diff-append 2)
(define-rule (diff diff-append)
  (let diff-list end start)
  end diff-list diff-open start diff)

(define-elim diff-open 2)
(define-rule (diff diff-open)
  (let list end start)
  list end connect
  start)

(define-net one-two-soles
  wire sole cons diff
  wire sole cons sole cons diff
  diff-append)

(define-net two-two-soles
  wire sole cons sole cons diff
  wire sole cons sole cons diff
  diff-append)
