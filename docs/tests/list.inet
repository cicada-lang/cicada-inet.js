(define-node sole (-> [] [Trivial *]))

(define-node null (-> [] [TrivialList *]))
(define-node cons (-> [TrivialList Trivial] [Nat *]))
(define-node append (-> [TrivialList TrivialList *] [TrivialList]))

(define-rule [null append] [])
(define-rule [cons append] [rot rot append swap cons])

(define-node main (-> [TrivialList *] []))

(define-net six_soles (-> [] [])
  [null
   sole cons
   sole cons
   sole cons
   null
   sole cons
   sole cons
   sole cons
   append
   main])
