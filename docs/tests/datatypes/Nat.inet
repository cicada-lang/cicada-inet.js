type Nat 0 end
node zero -- value!: Nat end
node add1 prev: Nat -- value!: Nat end

node add target!: Nat; addend: Nat -- return: Nat end

rule zero add
  (add)-addend
  return-(add)
end

rule add1 add
  (add)-addend (add1)-prev add add1
  return-(add)
end

show zero zero add end
run zero zero add end

claim one Nat end
define one zero add1 end

claim two Nat end
define two one one add end

claim four Nat end
define four two two add end

show two end
run two end

show four end
run four end

show zero one add end
run zero one add end

claim addadd Nat Nat Nat -- Nat end
define addadd add add end

run one one one addadd end