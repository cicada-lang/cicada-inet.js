type Trivial 0 end
node sole value!: Trivial end

type List 1 end
node null value!: List('A) end
node cons head: 'A tail: List('A) -- value!: List('A) end

node append target!: List('A) rest: List('A) -- return: List('A) end

rule null append
  (append)-rest
  return-(append)
end

rule cons append
  (append)-rest (cons)-tail append
  (cons)-head cons
  return-(append)
end

claim six_soles Trivial List end

define six_soles
  null sole cons sole cons sole cons
  null sole cons sole cons sole cons
  append
end

show six_soles end
run six_soles end